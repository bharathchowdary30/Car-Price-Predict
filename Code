

IMPORT DEPENDENCIES

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split

from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics

car_dataset =pd.read_csv('car data.csv')

DATA COLLECTION AND PROCESSING

car_dataset.head()

#CHECKING THE COLUMNS & ROWS
car_dataset.shape

#information about dataset
car_dataset.info()

#checking number of missing values
car_dataset.isnull().sum()

#checking the categories
print(car_dataset.Fuel_Type.value_counts())

print(car_dataset.Seller_Type.value_counts())
print(car_dataset.Transmission.value_counts())

car_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1, 'CNG':2}},inplace=True)

encoding categorical data

car_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1,}},inplace=True)

car_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,}},inplace=True)

car_dataset.head()

car_dataset.replace({'Transmission':{'Manual':0,'Automatic':1,}},inplace=True)

car_dataset.head()

Splitting training and test data

X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)
Y = car_dataset['Selling_Price']

print(Y)

print(X)

X_

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.1,random_state=2)

Model Training

#loading linear regression model
lin_reg_model = LinearRegression()

lin_reg_model.fit(X_train,Y_train)

Model Evaluation

# Prediction on training data
training_data_Prediction = lin_reg_model.predict(X_train)

#Squared error
error_score=metrics.r2_score(Y_train,training_data_Prediction)

print("R sqaured error:",error_score)

#Visualizes the actual Prices and predicted prices
plt.scatter(Y_test,training_data_Prediction)

plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title(" AP vs PP")
plt.show()

training_data_Prediction = lin_reg_model.predict(X_test)

error_score=metrics.r2_score(Y_test,training_data_Prediction)
print("R sqaured error:",error_score)

LASSO REGRESSION

 

Model Training

#loading linear regression model
lass_reg_model = Lasso()

lass_reg_model.fit(X_train,Y_train)

Model Evaluation

# Prediction on training data
training_data_Prediction = lass_reg_model.predict(X_train)

#Squared error
error_score=metrics.r2_score(Y_train,training_data_Prediction)

print("R sqaured error:",error_score)

#Visualizes the actual Prices and predicted prices
plt.scatter(Y_test,training_data_Prediction)

plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title(" AP vs PP")
plt.show()

training_data_Prediction = lass_reg_model.predict(X_test)

error_score=metrics.r2_score(Y_test,training_data_Prediction)
print("R sqaured error:",error_score)

